// generated by cdktf get
// terraform-aws-modules/s3-bucket/aws
import { TerraformModule, TerraformModuleUserConfig } from 'cdktf';
import { Construct } from 'constructs';
export interface S3BucketConfig extends TerraformModuleUserConfig {
  /**
  * (Optional) Sets the accelerate configuration of an existing bucket. Can be Enabled or Suspended.
  */
  readonly accelerationStatus?: string;
  /**
  * (Optional) List of AWS Account IDs should be allowed to deliver access logs to this bucket.
  *
  */
  readonly accessLogDeliveryPolicySourceAccounts?: string[];
  /**
  * (Optional) List of S3 bucket ARNs wich should be allowed to deliver access logs to this bucket.
  *
  */
  readonly accessLogDeliveryPolicySourceBuckets?: string[];
  /**
  * (Optional) The canned ACL to apply. Conflicts with `grant`
  */
  readonly acl?: string;
  /**
  * The ARN of KMS key which should be allowed in PutObject
  */
  readonly allowedKmsKeyArn?: string;
  /**
  * Map containing bucket analytics configuration.
  */
  readonly analyticsConfiguration?: any;
  /**
  * Whether or not the analytics source bucket is also the destination bucket.
  */
  readonly analyticsSelfSourceDestination?: boolean;
  /**
  * The analytics source account id.
  */
  readonly analyticsSourceAccountId?: string;
  /**
  * The analytics source bucket ARN.
  */
  readonly analyticsSourceBucketArn?: string;
  /**
  * Controls if S3 bucket should have S3 access log delivery policy attached
  */
  readonly attachAccessLogDeliveryPolicy?: boolean;
  /**
  * Controls if S3 bucket should have bucket analytics destination policy attached.
  */
  readonly attachAnalyticsDestinationPolicy?: boolean;
  /**
  * Controls if S3 bucket should deny incorrect encryption headers policy attached.
  */
  readonly attachDenyIncorrectEncryptionHeaders?: boolean;
  /**
  * Controls if S3 bucket policy should deny usage of incorrect KMS key SSE.
  */
  readonly attachDenyIncorrectKmsKeySse?: boolean;
  /**
  * Controls if S3 bucket should have deny non-SSL transport policy attached
  */
  readonly attachDenyInsecureTransportPolicy?: boolean;
  /**
  * Controls if S3 bucket should deny unencrypted object uploads policy attached.
  */
  readonly attachDenyUnencryptedObjectUploads?: boolean;
  /**
  * Controls if S3 bucket should have ELB log delivery policy attached
  */
  readonly attachElbLogDeliveryPolicy?: boolean;
  /**
  * Controls if S3 bucket should have bucket inventory destination policy attached.
  */
  readonly attachInventoryDestinationPolicy?: boolean;
  /**
  * Controls if S3 bucket should have ALB/NLB log delivery policy attached
  */
  readonly attachLbLogDeliveryPolicy?: boolean;
  /**
  * Controls if S3 bucket should have bucket policy attached (set to `true` to use value of `policy` as bucket policy)
  */
  readonly attachPolicy?: boolean;
  /**
  * Controls if a user defined public bucket policy will be attached (set to `false` to allow upstream to apply defaults to the bucket)
  * true
  */
  readonly attachPublicPolicy?: boolean;
  /**
  * Controls if S3 bucket should require the latest version of TLS
  */
  readonly attachRequireLatestTlsPolicy?: boolean;
  /**
  * Whether Amazon S3 should block public ACLs for this bucket.
  * true
  */
  readonly blockPublicAcls?: boolean;
  /**
  * Whether Amazon S3 should block public bucket policies for this bucket.
  * true
  */
  readonly blockPublicPolicy?: boolean;
  /**
  * (Optional, Forces new resource) The name of the bucket. If omitted, Terraform will assign a random, unique name.
  */
  readonly bucket?: string;
  /**
  * (Optional, Forces new resource) Creates a unique bucket name beginning with the specified prefix. Conflicts with bucket.
  */
  readonly bucketPrefix?: string;
  /**
  * Whether to manage S3 Bucket Ownership Controls on this bucket.
  */
  readonly controlObjectOwnership?: boolean;
  /**
  * List of maps containing rules for Cross-Origin Resource Sharing.
  *
  */
  readonly corsRule?: any;
  /**
  * Controls if S3 bucket should be created
  * true
  */
  readonly createBucket?: boolean;
  /**
  * The account ID of the expected bucket owner
  */
  readonly expectedBucketOwner?: string;
  /**
  * (Optional, Default:false ) A boolean that indicates all objects should be deleted from the bucket so that the bucket can be destroyed without error. These objects are not recoverable.
  */
  readonly forceDestroy?: boolean;
  /**
  * An ACL policy grant. Conflicts with `acl`
  *
  */
  readonly grant?: any;
  /**
  * Whether Amazon S3 should ignore public ACLs for this bucket.
  * true
  */
  readonly ignorePublicAcls?: boolean;
  /**
  * Map containing intelligent tiering configuration.
  */
  readonly intelligentTiering?: any;
  /**
  * Map containing S3 inventory configuration.
  */
  readonly inventoryConfiguration?: any;
  /**
  * Whether or not the inventory source bucket is also the destination bucket.
  */
  readonly inventorySelfSourceDestination?: boolean;
  /**
  * The inventory source account id.
  */
  readonly inventorySourceAccountId?: string;
  /**
  * The inventory source bucket ARN.
  */
  readonly inventorySourceBucketArn?: string;
  /**
  * List of maps containing configuration of object lifecycle management.
  *
  */
  readonly lifecycleRule?: any;
  /**
  * Map containing access bucket logging configuration.
  * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
  */
  readonly logging?: { [key: string]: string };
  /**
  * Map containing bucket metric configuration.
  *
  */
  readonly metricConfiguration?: any;
  /**
  * Map containing S3 object locking configuration.
  */
  readonly objectLockConfiguration?: any;
  /**
  * Whether S3 bucket should have an Object Lock configuration enabled.
  */
  readonly objectLockEnabled?: boolean;
  /**
  * Object ownership. Valid values: BucketOwnerEnforced, BucketOwnerPreferred or ObjectWriter. 'BucketOwnerEnforced': ACLs are disabled, and the bucket owner automatically owns and has full control over every object in the bucket. 'BucketOwnerPreferred': Objects uploaded to the bucket change ownership to the bucket owner if the objects are uploaded with the bucket-owner-full-control canned ACL. 'ObjectWriter': The uploading account will own the object if the object is uploaded with the bucket-owner-full-control canned ACL.
  * BucketOwnerEnforced
  */
  readonly objectOwnership?: string;
  /**
  * Bucket owner's display name and ID. Conflicts with `acl`
  * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
  */
  readonly owner?: { [key: string]: string };
  /**
  * (Optional) A valid bucket policy JSON document. Note that if the policy document is not specific enough (but still valid), Terraform may view the policy as constantly changing in a terraform plan. In this case, please make sure you use the verbose/specific version of the policy. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide.
  */
  readonly policy?: string;
  /**
  * Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!
  * true
  */
  readonly putinKhuylo?: boolean;
  /**
  * Map containing cross-region replication configuration.
  */
  readonly replicationConfiguration?: any;
  /**
  * (Optional) Specifies who should bear the cost of Amazon S3 data transfer. Can be either BucketOwner or Requester. By default, the owner of the S3 bucket would incur the costs of any data transfer. See Requester Pays Buckets developer guide for more information.
  */
  readonly requestPayer?: string;
  /**
  * Whether Amazon S3 should restrict public bucket policies for this bucket.
  * true
  */
  readonly restrictPublicBuckets?: boolean;
  /**
  * Map containing server-side encryption configuration.
  */
  readonly serverSideEncryptionConfiguration?: any;
  /**
  * (Optional) A mapping of tags to assign to the bucket.
  * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
  */
  readonly tags?: { [key: string]: string };
  /**
  * Map containing versioning configuration.
  * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
  */
  readonly versioning?: { [key: string]: string };
  /**
  * Map containing static web-site hosting or redirect configuration.
  */
  readonly website?: any;
}
/**
* Defines an S3Bucket based on a Terraform module
*
* Docs at Terraform Registry: {@link https://registry.terraform.io/modules/terraform-aws-modules/s3-bucket/aws/latest terraform-aws-modules/s3-bucket/aws}
*/
export class S3Bucket extends TerraformModule {
  private readonly inputs: { [name: string]: any } = { }
  public constructor(scope: Construct, id: string, config: S3BucketConfig = {}) {
    super(scope, id, {
      ...config,
      source: 'terraform-aws-modules/s3-bucket/aws',
    });
    this.accelerationStatus = config.accelerationStatus;
    this.accessLogDeliveryPolicySourceAccounts = config.accessLogDeliveryPolicySourceAccounts;
    this.accessLogDeliveryPolicySourceBuckets = config.accessLogDeliveryPolicySourceBuckets;
    this.acl = config.acl;
    this.allowedKmsKeyArn = config.allowedKmsKeyArn;
    this.analyticsConfiguration = config.analyticsConfiguration;
    this.analyticsSelfSourceDestination = config.analyticsSelfSourceDestination;
    this.analyticsSourceAccountId = config.analyticsSourceAccountId;
    this.analyticsSourceBucketArn = config.analyticsSourceBucketArn;
    this.attachAccessLogDeliveryPolicy = config.attachAccessLogDeliveryPolicy;
    this.attachAnalyticsDestinationPolicy = config.attachAnalyticsDestinationPolicy;
    this.attachDenyIncorrectEncryptionHeaders = config.attachDenyIncorrectEncryptionHeaders;
    this.attachDenyIncorrectKmsKeySse = config.attachDenyIncorrectKmsKeySse;
    this.attachDenyInsecureTransportPolicy = config.attachDenyInsecureTransportPolicy;
    this.attachDenyUnencryptedObjectUploads = config.attachDenyUnencryptedObjectUploads;
    this.attachElbLogDeliveryPolicy = config.attachElbLogDeliveryPolicy;
    this.attachInventoryDestinationPolicy = config.attachInventoryDestinationPolicy;
    this.attachLbLogDeliveryPolicy = config.attachLbLogDeliveryPolicy;
    this.attachPolicy = config.attachPolicy;
    this.attachPublicPolicy = config.attachPublicPolicy;
    this.attachRequireLatestTlsPolicy = config.attachRequireLatestTlsPolicy;
    this.blockPublicAcls = config.blockPublicAcls;
    this.blockPublicPolicy = config.blockPublicPolicy;
    this.bucket = config.bucket;
    this.bucketPrefix = config.bucketPrefix;
    this.controlObjectOwnership = config.controlObjectOwnership;
    this.corsRule = config.corsRule;
    this.createBucket = config.createBucket;
    this.expectedBucketOwner = config.expectedBucketOwner;
    this.forceDestroy = config.forceDestroy;
    this.grant = config.grant;
    this.ignorePublicAcls = config.ignorePublicAcls;
    this.intelligentTiering = config.intelligentTiering;
    this.inventoryConfiguration = config.inventoryConfiguration;
    this.inventorySelfSourceDestination = config.inventorySelfSourceDestination;
    this.inventorySourceAccountId = config.inventorySourceAccountId;
    this.inventorySourceBucketArn = config.inventorySourceBucketArn;
    this.lifecycleRule = config.lifecycleRule;
    this.logging = config.logging;
    this.metricConfiguration = config.metricConfiguration;
    this.objectLockConfiguration = config.objectLockConfiguration;
    this.objectLockEnabled = config.objectLockEnabled;
    this.objectOwnership = config.objectOwnership;
    this.owner = config.owner;
    this.policy = config.policy;
    this.putinKhuylo = config.putinKhuylo;
    this.replicationConfiguration = config.replicationConfiguration;
    this.requestPayer = config.requestPayer;
    this.restrictPublicBuckets = config.restrictPublicBuckets;
    this.serverSideEncryptionConfiguration = config.serverSideEncryptionConfiguration;
    this.tags = config.tags;
    this.versioning = config.versioning;
    this.website = config.website;
  }
  public get accelerationStatus(): string | undefined {
    return this.inputs['acceleration_status'] as string | undefined;
  }
  public set accelerationStatus(value: string | undefined) {
    this.inputs['acceleration_status'] = value;
  }
  public get accessLogDeliveryPolicySourceAccounts(): string[] | undefined {
    return this.inputs['access_log_delivery_policy_source_accounts'] as string[] | undefined;
  }
  public set accessLogDeliveryPolicySourceAccounts(value: string[] | undefined) {
    this.inputs['access_log_delivery_policy_source_accounts'] = value;
  }
  public get accessLogDeliveryPolicySourceBuckets(): string[] | undefined {
    return this.inputs['access_log_delivery_policy_source_buckets'] as string[] | undefined;
  }
  public set accessLogDeliveryPolicySourceBuckets(value: string[] | undefined) {
    this.inputs['access_log_delivery_policy_source_buckets'] = value;
  }
  public get acl(): string | undefined {
    return this.inputs['acl'] as string | undefined;
  }
  public set acl(value: string | undefined) {
    this.inputs['acl'] = value;
  }
  public get allowedKmsKeyArn(): string | undefined {
    return this.inputs['allowed_kms_key_arn'] as string | undefined;
  }
  public set allowedKmsKeyArn(value: string | undefined) {
    this.inputs['allowed_kms_key_arn'] = value;
  }
  public get analyticsConfiguration(): any | undefined {
    return this.inputs['analytics_configuration'] as any | undefined;
  }
  public set analyticsConfiguration(value: any | undefined) {
    this.inputs['analytics_configuration'] = value;
  }
  public get analyticsSelfSourceDestination(): boolean | undefined {
    return this.inputs['analytics_self_source_destination'] as boolean | undefined;
  }
  public set analyticsSelfSourceDestination(value: boolean | undefined) {
    this.inputs['analytics_self_source_destination'] = value;
  }
  public get analyticsSourceAccountId(): string | undefined {
    return this.inputs['analytics_source_account_id'] as string | undefined;
  }
  public set analyticsSourceAccountId(value: string | undefined) {
    this.inputs['analytics_source_account_id'] = value;
  }
  public get analyticsSourceBucketArn(): string | undefined {
    return this.inputs['analytics_source_bucket_arn'] as string | undefined;
  }
  public set analyticsSourceBucketArn(value: string | undefined) {
    this.inputs['analytics_source_bucket_arn'] = value;
  }
  public get attachAccessLogDeliveryPolicy(): boolean | undefined {
    return this.inputs['attach_access_log_delivery_policy'] as boolean | undefined;
  }
  public set attachAccessLogDeliveryPolicy(value: boolean | undefined) {
    this.inputs['attach_access_log_delivery_policy'] = value;
  }
  public get attachAnalyticsDestinationPolicy(): boolean | undefined {
    return this.inputs['attach_analytics_destination_policy'] as boolean | undefined;
  }
  public set attachAnalyticsDestinationPolicy(value: boolean | undefined) {
    this.inputs['attach_analytics_destination_policy'] = value;
  }
  public get attachDenyIncorrectEncryptionHeaders(): boolean | undefined {
    return this.inputs['attach_deny_incorrect_encryption_headers'] as boolean | undefined;
  }
  public set attachDenyIncorrectEncryptionHeaders(value: boolean | undefined) {
    this.inputs['attach_deny_incorrect_encryption_headers'] = value;
  }
  public get attachDenyIncorrectKmsKeySse(): boolean | undefined {
    return this.inputs['attach_deny_incorrect_kms_key_sse'] as boolean | undefined;
  }
  public set attachDenyIncorrectKmsKeySse(value: boolean | undefined) {
    this.inputs['attach_deny_incorrect_kms_key_sse'] = value;
  }
  public get attachDenyInsecureTransportPolicy(): boolean | undefined {
    return this.inputs['attach_deny_insecure_transport_policy'] as boolean | undefined;
  }
  public set attachDenyInsecureTransportPolicy(value: boolean | undefined) {
    this.inputs['attach_deny_insecure_transport_policy'] = value;
  }
  public get attachDenyUnencryptedObjectUploads(): boolean | undefined {
    return this.inputs['attach_deny_unencrypted_object_uploads'] as boolean | undefined;
  }
  public set attachDenyUnencryptedObjectUploads(value: boolean | undefined) {
    this.inputs['attach_deny_unencrypted_object_uploads'] = value;
  }
  public get attachElbLogDeliveryPolicy(): boolean | undefined {
    return this.inputs['attach_elb_log_delivery_policy'] as boolean | undefined;
  }
  public set attachElbLogDeliveryPolicy(value: boolean | undefined) {
    this.inputs['attach_elb_log_delivery_policy'] = value;
  }
  public get attachInventoryDestinationPolicy(): boolean | undefined {
    return this.inputs['attach_inventory_destination_policy'] as boolean | undefined;
  }
  public set attachInventoryDestinationPolicy(value: boolean | undefined) {
    this.inputs['attach_inventory_destination_policy'] = value;
  }
  public get attachLbLogDeliveryPolicy(): boolean | undefined {
    return this.inputs['attach_lb_log_delivery_policy'] as boolean | undefined;
  }
  public set attachLbLogDeliveryPolicy(value: boolean | undefined) {
    this.inputs['attach_lb_log_delivery_policy'] = value;
  }
  public get attachPolicy(): boolean | undefined {
    return this.inputs['attach_policy'] as boolean | undefined;
  }
  public set attachPolicy(value: boolean | undefined) {
    this.inputs['attach_policy'] = value;
  }
  public get attachPublicPolicy(): boolean | undefined {
    return this.inputs['attach_public_policy'] as boolean | undefined;
  }
  public set attachPublicPolicy(value: boolean | undefined) {
    this.inputs['attach_public_policy'] = value;
  }
  public get attachRequireLatestTlsPolicy(): boolean | undefined {
    return this.inputs['attach_require_latest_tls_policy'] as boolean | undefined;
  }
  public set attachRequireLatestTlsPolicy(value: boolean | undefined) {
    this.inputs['attach_require_latest_tls_policy'] = value;
  }
  public get blockPublicAcls(): boolean | undefined {
    return this.inputs['block_public_acls'] as boolean | undefined;
  }
  public set blockPublicAcls(value: boolean | undefined) {
    this.inputs['block_public_acls'] = value;
  }
  public get blockPublicPolicy(): boolean | undefined {
    return this.inputs['block_public_policy'] as boolean | undefined;
  }
  public set blockPublicPolicy(value: boolean | undefined) {
    this.inputs['block_public_policy'] = value;
  }
  public get bucket(): string | undefined {
    return this.inputs['bucket'] as string | undefined;
  }
  public set bucket(value: string | undefined) {
    this.inputs['bucket'] = value;
  }
  public get bucketPrefix(): string | undefined {
    return this.inputs['bucket_prefix'] as string | undefined;
  }
  public set bucketPrefix(value: string | undefined) {
    this.inputs['bucket_prefix'] = value;
  }
  public get controlObjectOwnership(): boolean | undefined {
    return this.inputs['control_object_ownership'] as boolean | undefined;
  }
  public set controlObjectOwnership(value: boolean | undefined) {
    this.inputs['control_object_ownership'] = value;
  }
  public get corsRule(): any | undefined {
    return this.inputs['cors_rule'] as any | undefined;
  }
  public set corsRule(value: any | undefined) {
    this.inputs['cors_rule'] = value;
  }
  public get createBucket(): boolean | undefined {
    return this.inputs['create_bucket'] as boolean | undefined;
  }
  public set createBucket(value: boolean | undefined) {
    this.inputs['create_bucket'] = value;
  }
  public get expectedBucketOwner(): string | undefined {
    return this.inputs['expected_bucket_owner'] as string | undefined;
  }
  public set expectedBucketOwner(value: string | undefined) {
    this.inputs['expected_bucket_owner'] = value;
  }
  public get forceDestroy(): boolean | undefined {
    return this.inputs['force_destroy'] as boolean | undefined;
  }
  public set forceDestroy(value: boolean | undefined) {
    this.inputs['force_destroy'] = value;
  }
  public get grant(): any | undefined {
    return this.inputs['grant'] as any | undefined;
  }
  public set grant(value: any | undefined) {
    this.inputs['grant'] = value;
  }
  public get ignorePublicAcls(): boolean | undefined {
    return this.inputs['ignore_public_acls'] as boolean | undefined;
  }
  public set ignorePublicAcls(value: boolean | undefined) {
    this.inputs['ignore_public_acls'] = value;
  }
  public get intelligentTiering(): any | undefined {
    return this.inputs['intelligent_tiering'] as any | undefined;
  }
  public set intelligentTiering(value: any | undefined) {
    this.inputs['intelligent_tiering'] = value;
  }
  public get inventoryConfiguration(): any | undefined {
    return this.inputs['inventory_configuration'] as any | undefined;
  }
  public set inventoryConfiguration(value: any | undefined) {
    this.inputs['inventory_configuration'] = value;
  }
  public get inventorySelfSourceDestination(): boolean | undefined {
    return this.inputs['inventory_self_source_destination'] as boolean | undefined;
  }
  public set inventorySelfSourceDestination(value: boolean | undefined) {
    this.inputs['inventory_self_source_destination'] = value;
  }
  public get inventorySourceAccountId(): string | undefined {
    return this.inputs['inventory_source_account_id'] as string | undefined;
  }
  public set inventorySourceAccountId(value: string | undefined) {
    this.inputs['inventory_source_account_id'] = value;
  }
  public get inventorySourceBucketArn(): string | undefined {
    return this.inputs['inventory_source_bucket_arn'] as string | undefined;
  }
  public set inventorySourceBucketArn(value: string | undefined) {
    this.inputs['inventory_source_bucket_arn'] = value;
  }
  public get lifecycleRule(): any | undefined {
    return this.inputs['lifecycle_rule'] as any | undefined;
  }
  public set lifecycleRule(value: any | undefined) {
    this.inputs['lifecycle_rule'] = value;
  }
  public get logging(): { [key: string]: string } | undefined {
    return this.inputs['logging'] as { [key: string]: string } | undefined;
  }
  public set logging(value: { [key: string]: string } | undefined) {
    this.inputs['logging'] = value;
  }
  public get metricConfiguration(): any | undefined {
    return this.inputs['metric_configuration'] as any | undefined;
  }
  public set metricConfiguration(value: any | undefined) {
    this.inputs['metric_configuration'] = value;
  }
  public get objectLockConfiguration(): any | undefined {
    return this.inputs['object_lock_configuration'] as any | undefined;
  }
  public set objectLockConfiguration(value: any | undefined) {
    this.inputs['object_lock_configuration'] = value;
  }
  public get objectLockEnabled(): boolean | undefined {
    return this.inputs['object_lock_enabled'] as boolean | undefined;
  }
  public set objectLockEnabled(value: boolean | undefined) {
    this.inputs['object_lock_enabled'] = value;
  }
  public get objectOwnership(): string | undefined {
    return this.inputs['object_ownership'] as string | undefined;
  }
  public set objectOwnership(value: string | undefined) {
    this.inputs['object_ownership'] = value;
  }
  public get owner(): { [key: string]: string } | undefined {
    return this.inputs['owner'] as { [key: string]: string } | undefined;
  }
  public set owner(value: { [key: string]: string } | undefined) {
    this.inputs['owner'] = value;
  }
  public get policy(): string | undefined {
    return this.inputs['policy'] as string | undefined;
  }
  public set policy(value: string | undefined) {
    this.inputs['policy'] = value;
  }
  public get putinKhuylo(): boolean | undefined {
    return this.inputs['putin_khuylo'] as boolean | undefined;
  }
  public set putinKhuylo(value: boolean | undefined) {
    this.inputs['putin_khuylo'] = value;
  }
  public get replicationConfiguration(): any | undefined {
    return this.inputs['replication_configuration'] as any | undefined;
  }
  public set replicationConfiguration(value: any | undefined) {
    this.inputs['replication_configuration'] = value;
  }
  public get requestPayer(): string | undefined {
    return this.inputs['request_payer'] as string | undefined;
  }
  public set requestPayer(value: string | undefined) {
    this.inputs['request_payer'] = value;
  }
  public get restrictPublicBuckets(): boolean | undefined {
    return this.inputs['restrict_public_buckets'] as boolean | undefined;
  }
  public set restrictPublicBuckets(value: boolean | undefined) {
    this.inputs['restrict_public_buckets'] = value;
  }
  public get serverSideEncryptionConfiguration(): any | undefined {
    return this.inputs['server_side_encryption_configuration'] as any | undefined;
  }
  public set serverSideEncryptionConfiguration(value: any | undefined) {
    this.inputs['server_side_encryption_configuration'] = value;
  }
  public get tags(): { [key: string]: string } | undefined {
    return this.inputs['tags'] as { [key: string]: string } | undefined;
  }
  public set tags(value: { [key: string]: string } | undefined) {
    this.inputs['tags'] = value;
  }
  public get versioning(): { [key: string]: string } | undefined {
    return this.inputs['versioning'] as { [key: string]: string } | undefined;
  }
  public set versioning(value: { [key: string]: string } | undefined) {
    this.inputs['versioning'] = value;
  }
  public get website(): any | undefined {
    return this.inputs['website'] as any | undefined;
  }
  public set website(value: any | undefined) {
    this.inputs['website'] = value;
  }
  public get s3BucketArnOutput() {
    return this.getString('s3_bucket_arn')
  }
  public get s3BucketBucketDomainNameOutput() {
    return this.getString('s3_bucket_bucket_domain_name')
  }
  public get s3BucketBucketRegionalDomainNameOutput() {
    return this.getString('s3_bucket_bucket_regional_domain_name')
  }
  public get s3BucketHostedZoneIdOutput() {
    return this.getString('s3_bucket_hosted_zone_id')
  }
  public get s3BucketIdOutput() {
    return this.getString('s3_bucket_id')
  }
  public get s3BucketLifecycleConfigurationRulesOutput() {
    return this.getString('s3_bucket_lifecycle_configuration_rules')
  }
  public get s3BucketPolicyOutput() {
    return this.getString('s3_bucket_policy')
  }
  public get s3BucketRegionOutput() {
    return this.getString('s3_bucket_region')
  }
  public get s3BucketWebsiteDomainOutput() {
    return this.getString('s3_bucket_website_domain')
  }
  public get s3BucketWebsiteEndpointOutput() {
    return this.getString('s3_bucket_website_endpoint')
  }
  protected synthesizeAttributes() {
    return this.inputs;
  }
}
