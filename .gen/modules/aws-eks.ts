// generated by cdktf get
// git::https://github.com/prefapp/tfm.git//modules/aws-eks?ref=feature/add-eks-module
import { TerraformModule, TerraformModuleUserConfig } from 'cdktf';
import { Construct } from 'constructs';
export interface AwsEksConfig extends TerraformModuleUserConfig {
  /**
  * Additional IAM roles to add to the aws-auth configmap.
  *
  */
  readonly awsAuthRoles?: any;
  /**
  * Additional IAM users to add to the aws-auth configmap.
  *
  */
  readonly awsAuthUsers?: any;
  /**
  * Number of days to retain log events
  * 14
  */
  readonly cloudwatchLogGroupRetentionInDays?: number;
  /**
  * Addons to deploy to the cluster
  */
  readonly clusterAddons: any;
  /**
  * Cluster encryption config
  */
  readonly clusterEncryptionConfig?: any;
  /**
  * Indicates whether or not the Amazon EKS private API server endpoint is enabled. Default is true.
  * true
  */
  readonly clusterEndpointPrivateAccess?: boolean;
  /**
  * Indicates whether or not the Amazon EKS public API server endpoint is enabled. Default is false.
  */
  readonly clusterEndpointPublicAccess?: boolean;
  /**
  */
  readonly clusterIamRoleArn: string;
  /**
  */
  readonly clusterName: string;
  /**
  */
  readonly clusterSecurityGroupId: string;
  /**
  * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
  */
  readonly clusterTags: { [key: string]: any };
  /**
  */
  readonly clusterVersion: string;
  /**
  * Create IAM resources for alb-ingress
  */
  readonly createAlbIngressIam?: boolean;
  /**
  * Create IAM resources for cloudwatch
  */
  readonly createCloudwatchIam?: boolean;
  /**
  * Create IAM role for cluster
  */
  readonly createClusterIamRole?: boolean;
  /**
  * Create cluster security group
  * true
  */
  readonly createClusterSecurityGroup?: boolean;
  /**
  * Create IAM resources for efs-driver
  */
  readonly createEfsDriverIam?: boolean;
  /**
  * Create IAM resources for external-dns
  */
  readonly createExternalDnsIam?: boolean;
  /**
  * Create KMS key for cluster
  * true
  */
  readonly createKmsKey?: boolean;
  /**
  * Create IAM resources for parameter-store
  */
  readonly createParameterStoreIam?: boolean;
  /**
  * Enable IRSA
  */
  readonly enableIrsa?: boolean;
  /**
  * Define dynamically the different fargate profiles
  *
  */
  readonly fargateProfiles?: any;
  /**
  * Whether to manage aws-auth configmap
  */
  readonly manageAwsAuthConfigmap?: boolean;
  /**
  * Define dynamically the different k8s node groups
  */
  readonly nodeGroups: any;
  /**
  * Additional rules to add to the node security group
  */
  readonly nodeSecurityGroupAdditionalRules: any;
  /**
  */
  readonly region: string;
  /**
  * Security group ids
  */
  readonly securityGroupsIds: string[];
  /**
  * Subnet ids
  */
  readonly subnetIds: string[];
  /**
  * VPC ID
  */
  readonly vpcId: string;
}
/**
* Defines an AwsEks based on a Terraform module
*
* Source at git::https://github.com/prefapp/tfm.git//modules/aws-eks?ref=feature/add-eks-module
*/
export class AwsEks extends TerraformModule {
  private readonly inputs: { [name: string]: any } = { }
  public constructor(scope: Construct, id: string, config: AwsEksConfig) {
    super(scope, id, {
      ...config,
      source: 'git::https://github.com/prefapp/tfm.git//modules/aws-eks?ref=feature/add-eks-module',
    });
    this.awsAuthRoles = config.awsAuthRoles;
    this.awsAuthUsers = config.awsAuthUsers;
    this.cloudwatchLogGroupRetentionInDays = config.cloudwatchLogGroupRetentionInDays;
    this.clusterAddons = config.clusterAddons;
    this.clusterEncryptionConfig = config.clusterEncryptionConfig;
    this.clusterEndpointPrivateAccess = config.clusterEndpointPrivateAccess;
    this.clusterEndpointPublicAccess = config.clusterEndpointPublicAccess;
    this.clusterIamRoleArn = config.clusterIamRoleArn;
    this.clusterName = config.clusterName;
    this.clusterSecurityGroupId = config.clusterSecurityGroupId;
    this.clusterTags = config.clusterTags;
    this.clusterVersion = config.clusterVersion;
    this.createAlbIngressIam = config.createAlbIngressIam;
    this.createCloudwatchIam = config.createCloudwatchIam;
    this.createClusterIamRole = config.createClusterIamRole;
    this.createClusterSecurityGroup = config.createClusterSecurityGroup;
    this.createEfsDriverIam = config.createEfsDriverIam;
    this.createExternalDnsIam = config.createExternalDnsIam;
    this.createKmsKey = config.createKmsKey;
    this.createParameterStoreIam = config.createParameterStoreIam;
    this.enableIrsa = config.enableIrsa;
    this.fargateProfiles = config.fargateProfiles;
    this.manageAwsAuthConfigmap = config.manageAwsAuthConfigmap;
    this.nodeGroups = config.nodeGroups;
    this.nodeSecurityGroupAdditionalRules = config.nodeSecurityGroupAdditionalRules;
    this.region = config.region;
    this.securityGroupsIds = config.securityGroupsIds;
    this.subnetIds = config.subnetIds;
    this.vpcId = config.vpcId;
  }
  public get awsAuthRoles(): any | undefined {
    return this.inputs['aws_auth_roles'] as any | undefined;
  }
  public set awsAuthRoles(value: any | undefined) {
    this.inputs['aws_auth_roles'] = value;
  }
  public get awsAuthUsers(): any | undefined {
    return this.inputs['aws_auth_users'] as any | undefined;
  }
  public set awsAuthUsers(value: any | undefined) {
    this.inputs['aws_auth_users'] = value;
  }
  public get cloudwatchLogGroupRetentionInDays(): number | undefined {
    return this.inputs['cloudwatch_log_group_retention_in_days'] as number | undefined;
  }
  public set cloudwatchLogGroupRetentionInDays(value: number | undefined) {
    this.inputs['cloudwatch_log_group_retention_in_days'] = value;
  }
  public get clusterAddons(): any {
    return this.inputs['cluster_addons'] as any;
  }
  public set clusterAddons(value: any) {
    this.inputs['cluster_addons'] = value;
  }
  public get clusterEncryptionConfig(): any | undefined {
    return this.inputs['cluster_encryption_config'] as any | undefined;
  }
  public set clusterEncryptionConfig(value: any | undefined) {
    this.inputs['cluster_encryption_config'] = value;
  }
  public get clusterEndpointPrivateAccess(): boolean | undefined {
    return this.inputs['cluster_endpoint_private_access'] as boolean | undefined;
  }
  public set clusterEndpointPrivateAccess(value: boolean | undefined) {
    this.inputs['cluster_endpoint_private_access'] = value;
  }
  public get clusterEndpointPublicAccess(): boolean | undefined {
    return this.inputs['cluster_endpoint_public_access'] as boolean | undefined;
  }
  public set clusterEndpointPublicAccess(value: boolean | undefined) {
    this.inputs['cluster_endpoint_public_access'] = value;
  }
  public get clusterIamRoleArn(): string {
    return this.inputs['cluster_iam_role_arn'] as string;
  }
  public set clusterIamRoleArn(value: string) {
    this.inputs['cluster_iam_role_arn'] = value;
  }
  public get clusterName(): string {
    return this.inputs['cluster_name'] as string;
  }
  public set clusterName(value: string) {
    this.inputs['cluster_name'] = value;
  }
  public get clusterSecurityGroupId(): string {
    return this.inputs['cluster_security_group_id'] as string;
  }
  public set clusterSecurityGroupId(value: string) {
    this.inputs['cluster_security_group_id'] = value;
  }
  public get clusterTags(): { [key: string]: any } {
    return this.inputs['cluster_tags'] as { [key: string]: any };
  }
  public set clusterTags(value: { [key: string]: any }) {
    this.inputs['cluster_tags'] = value;
  }
  public get clusterVersion(): string {
    return this.inputs['cluster_version'] as string;
  }
  public set clusterVersion(value: string) {
    this.inputs['cluster_version'] = value;
  }
  public get createAlbIngressIam(): boolean | undefined {
    return this.inputs['create_alb_ingress_iam'] as boolean | undefined;
  }
  public set createAlbIngressIam(value: boolean | undefined) {
    this.inputs['create_alb_ingress_iam'] = value;
  }
  public get createCloudwatchIam(): boolean | undefined {
    return this.inputs['create_cloudwatch_iam'] as boolean | undefined;
  }
  public set createCloudwatchIam(value: boolean | undefined) {
    this.inputs['create_cloudwatch_iam'] = value;
  }
  public get createClusterIamRole(): boolean | undefined {
    return this.inputs['create_cluster_iam_role'] as boolean | undefined;
  }
  public set createClusterIamRole(value: boolean | undefined) {
    this.inputs['create_cluster_iam_role'] = value;
  }
  public get createClusterSecurityGroup(): boolean | undefined {
    return this.inputs['create_cluster_security_group'] as boolean | undefined;
  }
  public set createClusterSecurityGroup(value: boolean | undefined) {
    this.inputs['create_cluster_security_group'] = value;
  }
  public get createEfsDriverIam(): boolean | undefined {
    return this.inputs['create_efs_driver_iam'] as boolean | undefined;
  }
  public set createEfsDriverIam(value: boolean | undefined) {
    this.inputs['create_efs_driver_iam'] = value;
  }
  public get createExternalDnsIam(): boolean | undefined {
    return this.inputs['create_external_dns_iam'] as boolean | undefined;
  }
  public set createExternalDnsIam(value: boolean | undefined) {
    this.inputs['create_external_dns_iam'] = value;
  }
  public get createKmsKey(): boolean | undefined {
    return this.inputs['create_kms_key'] as boolean | undefined;
  }
  public set createKmsKey(value: boolean | undefined) {
    this.inputs['create_kms_key'] = value;
  }
  public get createParameterStoreIam(): boolean | undefined {
    return this.inputs['create_parameter_store_iam'] as boolean | undefined;
  }
  public set createParameterStoreIam(value: boolean | undefined) {
    this.inputs['create_parameter_store_iam'] = value;
  }
  public get enableIrsa(): boolean | undefined {
    return this.inputs['enable_irsa'] as boolean | undefined;
  }
  public set enableIrsa(value: boolean | undefined) {
    this.inputs['enable_irsa'] = value;
  }
  public get fargateProfiles(): any | undefined {
    return this.inputs['fargate_profiles'] as any | undefined;
  }
  public set fargateProfiles(value: any | undefined) {
    this.inputs['fargate_profiles'] = value;
  }
  public get manageAwsAuthConfigmap(): boolean | undefined {
    return this.inputs['manage_aws_auth_configmap'] as boolean | undefined;
  }
  public set manageAwsAuthConfigmap(value: boolean | undefined) {
    this.inputs['manage_aws_auth_configmap'] = value;
  }
  public get nodeGroups(): any {
    return this.inputs['node_groups'] as any;
  }
  public set nodeGroups(value: any) {
    this.inputs['node_groups'] = value;
  }
  public get nodeSecurityGroupAdditionalRules(): any {
    return this.inputs['node_security_group_additional_rules'] as any;
  }
  public set nodeSecurityGroupAdditionalRules(value: any) {
    this.inputs['node_security_group_additional_rules'] = value;
  }
  public get region(): string {
    return this.inputs['region'] as string;
  }
  public set region(value: string) {
    this.inputs['region'] = value;
  }
  public get securityGroupsIds(): string[] {
    return this.inputs['security_groups_ids'] as string[];
  }
  public set securityGroupsIds(value: string[]) {
    this.inputs['security_groups_ids'] = value;
  }
  public get subnetIds(): string[] {
    return this.inputs['subnet_ids'] as string[];
  }
  public set subnetIds(value: string[]) {
    this.inputs['subnet_ids'] = value;
  }
  public get vpcId(): string {
    return this.inputs['vpc_id'] as string;
  }
  public set vpcId(value: string) {
    this.inputs['vpc_id'] = value;
  }
  public get accountIdOutput() {
    return this.getString('account_id')
  }
  public get debugOutput() {
    return this.getString('debug')
  }
  protected synthesizeAttributes() {
    return this.inputs;
  }
}
